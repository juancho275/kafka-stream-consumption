# ?? Identificador de la aplicación
spring.kafka.streams.application-id=kafka-stream-consumption-07
spring.cloud.stream.kafka.streams.binder.application-id=kafka-stream-consumption-07

# ? Configuración de Kafka (múltiples brokers)
spring.kafka.bootstrap-servers=localhost:9093,localhost:9094,localhost:9095

# ?? Directorio para almacenar RocksDB
spring.kafka.streams.state-dir=/tmp/custom-kafka-state

# ?? Definición de la función de procesamiento principal
spring.cloud.function.definition=process

# ?? Configuración de Kafka Streams
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms=1000
spring.cloud.stream.kafka.streams.binder.configuration.cache.max.bytes.buffering=10485760

# ? Deshabilitar Docker Compose si no se usa
spring.docker.compose.enabled=false

# ===========================
# ? Configuración Multi-Binder
# ===========================
spring.cloud.stream.binders.kstream.type=kstream
spring.cloud.stream.binders.kstream.environment.spring.cloud.stream.kafka.streams.binder.brokers=localhost:9093,localhost:9094,localhost:9095
spring.cloud.stream.binders.kstream.environment.spring.cloud.stream.kafka.streams.binder.applicationId=kafka-stream-consumption-06
spring.cloud.stream.binders.kstream.environment.spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.binders.kstream.environment.spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde

spring.cloud.stream.binders.globalktable.type=kstream
spring.cloud.stream.binders.globalktable.environment.spring.cloud.stream.kafka.streams.binder.brokers=localhost:9093,localhost:9094,localhost:9095
spring.cloud.stream.binders.globalktable.environment.spring.cloud.stream.kafka.streams.binder.applicationId=kafka-stream-consumption-06
spring.cloud.stream.binders.globalktable.environment.spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.binders.globalktable.environment.spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde

# ===========================
# ? Configuración de Topics y Bindings
# ===========================

## ? Topic de entrada principal (KStream)
spring.cloud.stream.bindings.process-in-0.destination=dev_internal_oracle_to_cloud_interoperability_movements_attention_point_query_topic_events
spring.cloud.stream.bindings.process-in-0.binder=kstream
spring.cloud.stream.bindings.process-in-0.content-type=application/json


## ? GlobalKTable: Vehicles
spring.cloud.stream.bindings.process-in-1.destination=dev_internal_oracle_to_cloud_vehicles_topic_events
spring.cloud.stream.bindings.process-in-1.binder=globalktable
spring.cloud.stream.bindings.process-in-1.content-type=application/json
spring.cloud.stream.kafka.streams.bindings.process-in-1.consumer.materializedAs=vehicle-store

# ?? Definir Serdes personalizados para KStream y GlobalKTable

# ? KStream principal (MovementsAttentionsPointsConsultation)
spring.cloud.stream.kafka.streams.bindings.process-in-0.consumer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.process-in-0.consumer.value-serde=co.com.spike.spring.cloud.stream.kafka_stream_consumption.serdes.MovementsAttentionsPointsConsultationSerde

# ? GlobalKTable: Vehicles
spring.cloud.stream.kafka.streams.bindings.process-in-1.consumer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.process-in-1.consumer.value-serde=co.com.spike.spring.cloud.stream.kafka_stream_consumption.serdes.VehiclesSerde

# ? GlobalKTable: AttentionPoint
spring.cloud.stream.kafka.streams.bindings.process-in-2.consumer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.process-in-2.consumer.value-serde=co.com.spike.spring.cloud.stream.kafka_stream_consumption.serdes.AttentionPointSerde

# ? GlobalKTable: AdjustmentFlypass
spring.cloud.stream.kafka.streams.bindings.process-in-3.consumer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.process-in-3.consumer.value-serde=co.com.spike.spring.cloud.stream.kafka_stream_consumption.serdes.AdjustmentFlypassSerde


## ? GlobalKTable: AttentionPoints
spring.cloud.stream.bindings.process-in-2.destination=dev_internal_oracle_to_cloud_attention_points_topic_events
spring.cloud.stream.bindings.process-in-2.binder=globalktable
spring.cloud.stream.bindings.process-in-2.consumer.materializedAs=attention-point-store

## ? GlobalKTable: AdjustmentFlypass
spring.cloud.stream.bindings.process-in-3.destination=dev_internal_oracle_to_cloud_interoperability_adjustments_flypass_topic_events
spring.cloud.stream.bindings.process-in-3.binder=globalktable
spring.cloud.stream.bindings.process-in-3.consumer.materializedAs=adjustment-flypass-store

## ? Topic de salida (KStream)
spring.cloud.stream.bindings.process-out-0.destination=flypass_payments.wallet.consumption_commands
spring.cloud.stream.bindings.process-out-0.binder=kstream
spring.cloud.stream.bindings.process-out-0.content-type=application/json

# ===========================
# ? Logs y Debugging
# ===========================
logging.level.org.springframework.context=INFO
logging.level.org.springframework.beans.factory=INFO
logging.level.org.apache.kafka=INFO

# ? Desactivar reinicio automático de Spring Boot
spring.devtools.restart.enabled=false

# ? Puerto del servidor
server.port=9595
